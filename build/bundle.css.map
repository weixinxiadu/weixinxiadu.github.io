{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport {onMount} from 'svelte';\n\timport seedrandom from 'seedrandom';\n\tconst numBooks = 9;\n\tlet books = [];\n\tlet seed = getSeed();\n\tlet onlytop50 = getOnlyTop50();\n\t$: pageUrl = getPageUrl(seed, onlytop50);\n\t$: rerollUrl = getPageUrl(\"\", onlytop50);\n\tasync function fetchJson(url) {\n\t\tlet response = await fetch(url);\n\t\treturn await response.json();\n\t}\n\tfunction getSeed() {\n\t\tlet url = new URL(document.location);\n\t\tif (url.hash !== \"\") {\n\t\t\treturn parseInt(url.hash.substr(1));\n\t\t}\n\t\treturn Date.now();\n\t}\n\tfunction getOnlyTop50() {\n\t\tlet url = new URL(document.location);\n\t\treturn url.searchParams.get(\"top50\") || false;\n\t}\n\tfunction getPageUrl(seed, onlytop50) {\n\t\tlet url = new URL(document.location);\n\t\turl.hash = seed;\n\t\turl.searchParams.set(\"top50\", onlytop50);\n\t\treturn url;\n\t}\n\tasync function randomFetchBooks(metadata) {\n\t\tlet totalBooks = Object.values(metadata).reduce((a, b) => a + b);\n\t\tlet bookIds = new Set();\n\t\tlet rng = seedrandom(seed);\n\t\tbooks = []\n\t\twhile (bookIds.size < numBooks) {\n\t\t\tbookIds.add(Math.floor(rng() * totalBooks));\n\t\t}\n\t\tbookIds = [...bookIds].sort((a, b) => a - b);\n\t\tlet currentCount = 0;\n\t\tfor (let category in metadata) {\n\t\t\tlet count = metadata[category];\n\t\t\tif (bookIds.length == 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (currentCount + count > bookIds[0]) {\n\t\t\t\tlet data = await fetchJson(`data/${category}.json`)\n\t\t\t\twhile (bookIds.length > 0 && currentCount + count > bookIds[0]) {\n\t\t\t\t\tbooks = [...books, data[bookIds[0] - currentCount]];\n\t\t\t\t\tbookIds = bookIds.slice(1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentCount += count;\n\t\t}\n\t}\n\tasync function fetchBooks() {\n\t\tlet metadata = await fetchJson(\"data/meta.json\");\n\t\tif (onlytop50) {\n\t\t\tfor (let book in metadata) {\n\t\t\t\tmetadata[book] = Math.min(metadata[book], 50);\n\t\t\t}\n\t\t}\n\t\trandomFetchBooks(metadata);\n\t}\n\tonMount(fetchBooks);\n</script>\n\n<main>\n<h1>泛读</h1>\n<p class=\"subtitle\">不喜欢？<a href={rerollUrl}>再选几本！</a></p>\n<label>\n\t<input type=\"checkbox\" bind:checked={onlytop50} on:change={fetchBooks}>\n\t只选前50的书\n</label>\n<div class=\"content\">\n{#each books as book}\n\t<div class=\"book\">\n\t\t<a href={book.bookUrl}>\n\t\t\t<img src={book.cover} alt={book.title}/>\n\t\t\t<p class=\"title\">{book.title}</p>\n\t\t</a>\n\t\t<p class=\"author\">作者: {book.author}</p>\n\t</div>\n{/each}\n</div>\n<p>这次随机结果的链接: <a href={pageUrl}>{pageUrl}</a> </p>\n</main>\n\n<style>\n\tmain {\n\t\tmargin: 0 auto;\n\t\ttext-align: center;\n\t\tmax-width: 600px;\n\t}\n\n\t.content {\n\t\t\tdisplay: grid;\n\t\t\tgrid-template-columns: repeat(3, minmax(120px, 1fr) );\n\t}\n\n\t.book {\n\t\tpadding: 4px;\n\t}\n\t.title {\n\t\tmargin-bottom: 0px;\n\t}\n\t.author {\n\t\tmargin-top: 5px;\n\t\tfont-size: 10px;\n\t}\n</style>"
  ],
  "names": [],
  "mappings": "AAyFC,IAAI,eAAC,CAAC,AACL,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,UAAU,CAAE,MAAM,CAClB,SAAS,CAAE,KAAK,AACjB,CAAC,AAED,QAAQ,eAAC,CAAC,AACR,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,OAAO,CAAC,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,AACvD,CAAC,AAED,KAAK,eAAC,CAAC,AACN,OAAO,CAAE,GAAG,AACb,CAAC,AACD,MAAM,eAAC,CAAC,AACP,aAAa,CAAE,GAAG,AACnB,CAAC,AACD,OAAO,eAAC,CAAC,AACR,UAAU,CAAE,GAAG,CACf,SAAS,CAAE,IAAI,AAChB,CAAC"
}